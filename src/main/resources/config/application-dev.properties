# colorful the log output for console
spring.output.ansi.enabled=detect

# the config for tomcat
server.port = 8087
server.context-path=/
server.session.timeout=10

# the log
logging.config=classpath:log4j2.xml

# qiniu host
qn.host=http://rs.blissmall.net

################################################
##            REDIS (RedisProperties)         ##
################################################
# Maximum number of redirects to follow when executing commands across the cluster.
#spring.redis.cluster.max-redirects=3
# Comma-separated list of "host:port" pairs to bootstrap from.
#spring.redis.cluster.nodes=localhost:6379
# Database index used by the connection factory.
spring.redis.database=0
# Redis server host.
spring.redis.host=qa.blissmall.net
# Login password of the redis server.
spring.redis.password=Xfxbqa2016
# Max number of connections that can be allocated by the pool at a given time. Use a negative value for no limit.
spring.redis.pool.max-active=8
# Max number of "idle" connections in the pool. Use a negative value to indicate an unlimited number of idle connections.
spring.redis.pool.max-idle=8
# Maximum amount of time (in milliseconds) a connection allocation should block before throwing an exception when the pool is exhausted. Use a negative value to block indefinitely.
spring.redis.pool.max-wait=-1
# Target for the minimum number of idle connections to maintain in the pool. This setting only has an effect if it is positive.
spring.redis.pool.min-idle=0
#Redis server port.
spring.redis.port=6379
# Name of Redis server.
#spring.redis.sentinel.master=
# Comma-separated list of host:port pairs.
#spring.redis.sentinel.nodes=
# Connection timeout in milliseconds.
spring.redis.timeout=3000

################################################
##         Cache and mini service About       ##
################################################
# unit : second
puff.redis.validatecode=120
puff.sms.host=http://localhost:3000/sms/internal
puff.ip.host=http://localhost:3000/ip
puff.cache.code.namespace=puff.code
puff.user.overlogin.count=3

################################################
##               DataSource Config            ##
################################################

dataSource.hikaricp.dataSourceClassName=com.mysql.jdbc.jdbc2.optional.MysqlDataSource
dataSource.hikaricp.jdbcUrl= jdbc:mysql://localhost:3306/tiramisu?useUnicode=true&characterEncoding=utf-8&useSSL=false
dataSource.hikaricp.username=root
dataSource.hikaricp.password=pigo2016
dataSource.hikaricp.autoCommit=true
dataSource.hikaricp.connectionTimeout=30000
dataSource.hikaricp.idleTimeout=600000
dataSource.hikaricp.maxLifetime=1800000
dataSource.hikaricp.minimumIdle=5
dataSource.hikaricp.maximumPoolSize=10
dataSource.hikaricp.poolName=puff-pool
dataSource.hikaricp.validationTimeout=5000

dataSource.hikaricp.cachePrepStmts=true
dataSource.hikaricp.prepStmtCacheSize=250
dataSource.hikaricp.prepStmtCacheSqlLimit=2048


################################################
##                 Spring Session             ##
################################################
# Name of the map used to store sessions.
spring.session.hazelcast.map-name=spring:session:sessions
# Create the required session tables on startup if necessary.
#spring.session.jdbc.initializer.enabled=true
# Path to the SQL file to use to initialize the database schema.
#spring.session.jdbc.schema=
# Name of database table used to store sessions.
#spring.session.jdbc.table-name=SPRING_SESSION
# Collection name used to store sessions.
#spring.session.mongo.collection-name=sessions
# Flush mode for the Redis sessions.
spring.session.redis.flush-mode=on_save
# Namespace for keys used to store sessions.
spring.session.redis.namespace=puff.session
# Session store type.
spring.session.store-type=redis

#**********************************************#
#                Thymeleaf                     #
#**********************************************#
spring.thymeleaf.cache=false
